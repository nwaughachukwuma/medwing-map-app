{"version":3,"sources":["utils/config.js","utils/api.js","utils/helper.js","App.js","plugins/material-ui/styles.js","serviceWorker.js","index.js"],"names":["API_KEY","fetchConfig","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","fetchDataFromServer","fetch","then","response","json","result","catch","_","Swal","fire","type","title","text","storeLocation","data","arguments","length","undefined","Object","objectSpread","body","JSON","stringify","error","console","log","editLocation","id","concat","deleteLocation","searchQuery","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","new_query","wrap","_context","prev","next","abrupt","replace","responseJson","_responseJson$results","results","formatted_address","location","geometry","Promise","reject","sent","t0","stop","_x","apply","this","viewportheight","window","innerWidth","innerHeight","MapHome","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","polygonOptions","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","componentDidMount","setState","prevState","places","toConsumableArray","markers","initLocation","_callee3","_context3","navigator","geolocation","getCurrentPosition","_ref3","_callee2","position","_position$coords","latitude","longitude","_context2","coords","enableHighAccuracy","timeout","maximumAge","toggleAddPlace","addPlace","handleChange","item","val","markerName","target","value","addPlaceWithMarker","_ref4","_callee5","e","_context5","preventDefault","state","_ref5","_callee4","_context4","newMarkerPoint","success","marker","lat","lng","currentMarker","index","mapZoom","_x3","_x2","editPlaceWithMarker","_ref6","_callee7","_this$state","_this$state$currentMa","editPlace","_context7","assign","slice","splice","_ref7","_callee6","_context6","_x5","_x4","deletePlaceWithMarker","_ref8","_callee8","_this$state$currentMa2","deletePlace","_context8","_x6","inherits","createClass","key","prevProps","_this2","classes","_this$state2","react_default","createElement","className","root","AppBar_default","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","Place_default","Typography_default","lib","googleMapsApiKey","onError","onLoad","map","ref","mapRef","onUnmount","mapContainerClassName","mapContainerStyle","height","width","onZoomChanged","clickableIcons","onDragEnd","zoom","center","parseFloat","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","style","background","border","padding","marginLeft","marginTop","component","polygon","paths","options","gridSize","imagePath","clusterer","i","onClick","onSubmit","TextField_default","label","onKeyPress","stopPropagation","which","textField","helperText","onChange","margin","Button_default","addButton","Paper_default","elevation","button","Divider_default","toFixed","Component","withStyles","theme","paddingBottom","spacing","unit","flexGrow","marginRight","marginBottom","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"ieAAaA,UAAU,4DCEVC,EAAc,WAEzB,MAAO,CACLC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACPC,eAAgB,2BAElBC,SAAU,SACVC,SAAU,gBAIDC,EAAsB,WACjC,OAAOC,MAAM,gDAAiDV,GAC3DW,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIA,IACfC,MAAM,SAAAC,GAAC,OACNC,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,wBACPC,KAAM,kDAKDC,EAAgB,WAAe,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAEnC,OAAOd,MAAM,+CAADiB,OAAAC,EAAA,EAAAD,CAAA,GACP3B,EADO,CAEVC,OAAQ,OACRI,QAAS,CACPC,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAUR,MAEpBZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIA,IACfC,MAAM,SAAAiB,GAEL,OADAC,QAAQC,IAAIF,EAAMpB,UACXK,IAAKC,KAAK,CACfC,KAAM,QACNC,MAAO,wBACPC,KAAM,kDAKDc,EAAe,SAACC,GAAkB,IAAdb,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAEtC,OAAOd,MAAK,gDAAA2B,OAAiDD,GAAjDT,OAAAC,EAAA,EAAAD,CAAA,GACP3B,EADO,CAEVC,OAAQ,MACRI,QAAS,CACPC,eAAgB,mCAElBuB,KAAMC,KAAKC,UAAUR,MAEpBZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIA,IACfC,MAAM,SAAAiB,GAEL,OADAC,QAAQC,IAAIF,EAAMpB,UACXK,IAAKC,KAAK,CACfC,KAAM,QACNC,MAAO,wBACPC,KAAM,kDAKDiB,EAAiB,SAAAF,GAE5B,OAAO1B,MAAK,gDAAA2B,OAAiDD,GAAjDT,OAAAC,EAAA,EAAAD,CAAA,GACP3B,EADO,CAEVC,OAAQ,YAEPU,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIA,IACfC,MAAM,SAAAiB,GAEL,OADAC,QAAQC,IAAIF,EAAMpB,UACXK,IAAKC,KAAK,CACfC,KAAM,QACNC,MAAO,wBACPC,KAAM,kDC1EDkB,EAAW,eAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACrBL,EAAMrB,OAAS,GADM,CAAAwB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAEhBnC,IAAKC,KAAK,CACfC,KAAM,UACNC,MAAO,QACPC,KAAM,+BALe,cAQnB0B,EAAYD,EAAMO,QAAQ,MAAO,KARdJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUVzC,MAAK,6DAAA2B,OAC6CU,EAD7C,SAAAV,OAC8DtC,IAE7EY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA2C,GAAgB,IAAAC,EAIhBD,EAAaE,QAAQ,GAFvBC,EAFkBF,EAElBE,kBACYC,EAHMH,EAGlBI,SAAYD,SAGd,OADiB/B,OAAAC,EAAA,EAAAD,CAAA,GAAQ+B,EAAR,CAAkBtC,MAAOqC,MAI3C1C,MAAM,SAAAiB,GAAK,OAAI4B,QAAQC,OAAO7B,KAvBV,cAAAiB,EAAAG,OAAA,SAAAH,EAAAa,MAAA,cAAAb,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAAAA,EAAAG,OAAA,SAyBhBnC,IAAKC,KAAK,CACfC,KAAM,UACNC,MAAO,QACPC,KACE,4EA7BmB,yBAAA4B,EAAAe,SAAAnB,EAAA,iBAAH,gBAAAoB,GAAA,OAAAzB,EAAA0B,MAAAC,KAAA3C,YAAA,GCoBpB4C,EAAiB,KACY,qBAAtBC,OAAOC,aAEhBF,EAAiBC,OAAOE,aAGnB,IAAMC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAhD,OAAAiD,EAAA,EAAAjD,CAAAwC,KAAAK,IACjBG,EAAAhD,OAAAkD,EAAA,EAAAlD,CAAAwC,KAAAxC,OAAAmD,EAAA,EAAAnD,CAAA6C,GAAAO,KAAAZ,KAAMO,KAkBRM,eAAiB,CACfC,UAAW,aACXC,YAAa,GACbC,YAAa,MACbC,cAAe,EACfC,aAAc,EACdC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAQ,GA7BSf,EAgCnBgB,kBAhCmBhE,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAgCC,SAAAC,IAAA,OAAAH,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEdpD,EAAQ0B,OAAS,IACnBR,IAAKC,KAAK,CACRC,KAAM,OACNC,MAAO,kBACPC,KAAM,oDAGVZ,IAAsBE,KAAK,SAAAG,GAAM,OAC/B6D,EAAKiB,SAAS,SAAAC,GAAS,MAAK,CAC1BC,OAAM,GAAAzD,OAAAV,OAAAoE,EAAA,EAAApE,CAAMkE,EAAUC,QAAhBnE,OAAAoE,EAAA,EAAApE,CAA2Bb,EAAOkF,eAG5CrB,EAAKsB,eAda,wBAAAhD,EAAAe,SAAAnB,MAhCD8B,EAiDnBsB,aAjDmBtE,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAiDJ,SAAAsD,IAAA,OAAAxD,EAAAC,EAAAK,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,OAEbiD,UAAUC,YAAYC,mBAAtB,eAAAC,EAAA5E,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KACE,SAAA4D,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAlE,EAAAC,EAAAK,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,UAAAuD,EACkCD,EAASK,OAAjCH,EADVD,EACUC,SAAUC,EADpBF,EACoBE,UACbD,GAAaC,EAFpB,CAAAC,EAAA1D,KAAA,QAKIzC,MAAM,0BACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA2C,GAAY,OAChBqB,EAAKiB,SAAS,CACZkB,OAAQxD,MAGXvC,MAAM,SAAAiB,GAAK,OAAI4B,QAAQC,OAAO7B,KAZrC6E,EAAA1D,KAAA,sBAAA0D,EAAAzD,OAAA,SAcWuB,EAAKiB,SAAS,CAAEkB,OAAQL,EAASK,UAd5C,wBAAAD,EAAA7C,SAAAwC,MADF,gBAAAvC,GAAA,OAAAsC,EAAArC,MAAAC,KAAA3C,YAAA,GAkBE,WAEEd,MAAM,0BACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA2C,GAAY,OAChBqB,EAAKiB,SAAS,CACZkB,OAAQxD,MAGXvC,MAAM,SAAAC,GAAC,OACNC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,oBACPC,KAAM,6CAId,CAAE0F,oBAAoB,EAAMC,QAAS,IAAOC,WAAY,MArC7C,wBAAAd,EAAAnC,SAAAkC,MAjDIvB,EAoGnBuC,eAAiB,kBACfvC,EAAKiB,SAAS,SAAAC,GAAS,MAAK,CAAEsB,UAAWtB,EAAUsB,aArGlCxC,EAuGnByC,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACrB,OAAQD,GACN,IAAK,cACH1C,EAAKiB,SAAS,CAAE2B,WAAYD,EAAIE,OAAOC,QACvC,MACF,IAAK,WACH9C,EAAKiB,SAAS,CAAE9C,MAAOwE,EAAIE,OAAOC,WA7GrB9C,EAoHnB+C,mBApHmB,eAAAC,EAAAhG,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAoHE,SAAAgF,EAAMC,GAAN,OAAAnF,EAAAC,EAAAK,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,OACnB0E,EAAEE,iBACFxF,EAAYoC,EAAKqD,MAAMlF,OAAOnC,KAA9B,eAAAsH,EAAAtG,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAmC,SAAAsF,EAAMpH,GAAN,OAAA4B,EAAAC,EAAAK,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cAAAgF,EAAAhF,KAAA,EAE3B7B,EAAcR,GACjBH,KAAK,SAAAC,GACJ,IAAMwH,EAAiBxH,EAASyH,QAAQC,OACxC3D,EAAKiB,SAAS,SAAAC,GAAS,MAAK,CAC1BiB,OAAOnF,OAAAC,EAAA,EAAAD,CAAA,GACFkE,EAAUiB,OADT,CAEJH,SAAUyB,EAAeG,IACzB3B,UAAWwB,EAAeI,MAE5B1C,OAAM,GAAAzD,OAAAV,OAAAoE,EAAA,EAAApE,CAAMkE,EAAUC,QAAhB,CAAwBsC,IAC9BK,cAAc9G,OAAAC,EAAA,EAAAD,CAAA,GACTb,EADQ,CAEX4H,MAAO7C,EAAUC,OAAOrE,SAE1BqB,MAAO,GACP6F,QAAS,QAGZ5H,MAAM,SAAAC,GAAC,OACNC,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,wBACPC,KAAM,sDAxBqB,wBAAA8G,EAAAnE,SAAAkE,MAAnC,gBAAAU,GAAA,OAAAX,EAAA/D,MAAAC,KAAA3C,YAAA,IAFmB,wBAAAsG,EAAA9D,SAAA4D,MApHF,gBAAAiB,GAAA,OAAAlB,EAAAzD,MAAAC,KAAA3C,YAAA,GAAAmD,EAoJnBmE,oBApJmB,eAAAC,EAAApH,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAoJG,SAAAoG,EAAMnB,GAAN,IAAAoB,EAAA1B,EAAA2B,EAAAR,EAAAH,EAAAC,EAAA1C,EAAAqD,EAAA,OAAAzG,EAAAC,EAAAK,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,UAAA8F,EAIhBtE,EAAKqD,MAFPT,EAFkB0B,EAElB1B,WAFkB2B,EAAAD,EAGlBR,cAAiBC,EAHCQ,EAGDR,MAAOH,EAHNW,EAGMX,IAAKC,EAHXU,EAGWV,IAE1BE,GAAWH,GAAOC,EALH,CAAAY,EAAAjG,KAAA,eAMlBlC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,QACPC,KAAM,wCATU+H,EAAAhG,OAAA,SAWX,MAXW,YAahBmE,EAAW9F,OAAS,GAbJ,CAAA2H,EAAAjG,KAAA,eAclBlC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,QACPC,KAAM,0CAjBU+H,EAAAhG,OAAA,SAmBX,MAnBW,cAsBhB0C,EAASnE,OAAO0H,OAAO,GAAI1E,EAAKqD,MAAMlC,QACpCqD,EAAYrD,EAAOwD,MAAMZ,EAAOA,EAAQ,GAC9C5C,EAAOyD,OAAOb,EAAO,GAxBDU,EAAAjG,KAAA,GAyBdwB,EAAKiB,SAAS,CAAE9C,MAAOyE,EAAYzB,OAAQA,EAAQqB,UAAU,IAzB/C,QA0BpB5E,EAAYoC,EAAKqD,MAAMlF,OAAOnC,KAA9B,eAAA6I,EAAA7H,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAmC,SAAA6G,EAAM3I,GAAN,OAAA4B,EAAAC,EAAAK,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EAE3BhB,EAAagH,EAAU,GAAG/G,GAAItB,GACjCH,KAAK,SAAAC,GACJ,IAAMwH,EAAiBxH,EAASyH,QAAQC,OACxC3D,EAAKiB,SAAS,SAAAC,GAAS,MAAK,CAC1BiB,OAAOnF,OAAAC,EAAA,EAAAD,CAAA,GACFkE,EAAUiB,OADT,CAEJH,SAAUyB,EAAeG,IACzB3B,UAAWwB,EAAeI,MAE5B1C,OAAM,GAAAzD,OAAAV,OAAAoE,EAAA,EAAApE,CAAMkE,EAAUC,QAAhB,CAAwBsC,IAC9BK,cAAc9G,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAP,CAAe4H,MAAOA,IACnC5F,MAAO,GACPyE,WAAY,QAGfxG,MAAM,SAAAC,GAAC,OACNC,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,0BACPC,KAAM,4BArBqB,wBAAAqI,EAAA1F,SAAAyF,MAAnC,gBAAAE,GAAA,OAAAH,EAAAtF,MAAAC,KAAA3C,YAAA,IA1BoB,yBAAA4H,EAAApF,SAAAgF,MApJH,gBAAAY,GAAA,OAAAb,EAAA7E,MAAAC,KAAA3C,YAAA,GAAAmD,EAyMnBkF,sBAzMmB,eAAAC,EAAAnI,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAyMK,SAAAmH,EAAMlC,GAAN,IAAAmC,EAAAtB,EAAAH,EAAAC,EAAA1C,EAAAmE,EAAA,OAAAvH,EAAAC,EAAAK,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,UAAA6G,EAGlBrF,EAAKqD,MADPS,cAAiBC,EAFGsB,EAEHtB,MAAOH,EAFJyB,EAEIzB,IAAKC,EAFTwB,EAESxB,IAE1BE,GAAWH,GAAOC,EAJD,CAAA0B,EAAA/G,KAAA,eAKpBlC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,QACPC,KAAM,gDARY6I,EAAA9G,OAAA,oBAalB0C,EAASnE,OAAO0H,OAAO,GAAI1E,EAAKqD,MAAMlC,SACpCmE,EAAcnE,EAAOwD,MAAMZ,EAAOA,EAAQ,IAC/B,GAfK,CAAAwB,EAAA/G,KAAA,eAgBpBlC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,QACPC,KAAM,wCAnBY6I,EAAA9G,OAAA,wBAuBtB0C,EAAOyD,OAAOb,EAAO,GAvBCwB,EAAA/G,KAAA,GAyBhBb,EAAe2H,EAAY,GAAG7H,IACjCzB,KAAK,SAAAC,GACJ+D,EAAKiB,SAAS,CACZ6C,cAAc9G,OAAAC,EAAA,EAAAD,CAAA,GACTmE,EAAOA,EAAOrE,OAASqE,EAAOrE,OAAS,EAAI,GADnC,CAEXiH,MAAO5C,EAAOrE,OAASqE,EAAOrE,OAAS,EAAI,IAE7CqE,OAAOnE,OAAAoE,EAAA,EAAApE,CAAKf,EAASyH,QAAQrC,aAGhCjF,MAAM,SAAAC,GAAC,OACNC,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,0BACPC,KAAM,4BAvCU,yBAAA6I,EAAAlG,SAAA+F,MAzML,gBAAAI,GAAA,OAAAL,EAAA5F,MAAAC,KAAA3C,YAAA,GAEjBmD,EAAKqD,MAAQ,CACXW,QAAS,EACTpB,WAAY,GACZJ,UAAU,EACVrE,MAAO,GACPgE,OAAQ,GACRpD,SAAU,GACV+E,cAAe,CACbF,IAAK,KACLC,IAAK,KACLpH,MAAO,eACPsH,MAAO,MAET5C,OAAQ,IAfOnB,EADrB,OAAAhD,OAAAyI,EAAA,EAAAzI,CAAA6C,EAAAC,GAAA9C,OAAA0I,EAAA,EAAA1I,CAAA6C,EAAA,EAAA8F,IAAA,qBAAA7C,MAAA,SA2FqB8C,EAAW1E,GACxB0E,IAAcpG,KAAKO,QACjBmB,EAAUC,OAAW3B,KAAK6D,MAAMlC,UA7F1C,CAAAwE,IAAA,SAAA7C,MAAA,WAsPW,IAAA+C,EAAArG,KACCsG,EAAYtG,KAAKO,MAAjB+F,QADDC,EAUHvG,KAAK6D,MAPPb,EAHKuD,EAGLvD,SACArE,EAJK4H,EAIL5H,MACAgE,EALK4D,EAKL5D,OACA2B,EANKiC,EAMLjC,cACA3C,EAPK4E,EAOL5E,OACAyB,EARKmD,EAQLnD,WACAoB,EATK+B,EASL/B,QAGF,OACEgC,EAAAhI,EAAAiI,cAAA,OAAKC,UAAWJ,EAAQK,MACtBH,EAAAhI,EAAAiI,cAACG,EAAApI,EAAD,CAAQ8D,SAAS,UACfkE,EAAAhI,EAAAiI,cAACI,EAAArI,EAAD,CAASsI,QAAQ,SACfN,EAAAhI,EAAAiI,cAACM,EAAAvI,EAAD,CAEEkI,UAAWJ,EAAQU,WACnBC,MAAM,UACNC,aAAW,QAEXV,EAAAhI,EAAAiI,cAACU,EAAA3I,EAAD,OAEFgI,EAAAhI,EAAAiI,cAACW,EAAA5I,EAAD,CAAYsI,QAAQ,KAAKG,MAAM,WAA/B,iBAMJT,EAAAhI,EAAAiI,cAAA,OAAKC,UAAU,WACbF,EAAAhI,EAAAiI,cAAA,OAAKC,UAAU,iBACbF,EAAAhI,EAAAiI,cAACY,EAAA,WAAD,CACEpJ,GAAG,gBACHqJ,iBAAkB1L,EAClB2L,QAAS,SAAA1J,GACPC,QAAQC,IAAIF,KAGd2I,EAAAhI,EAAAiI,cAACY,EAAA,UAAD,CACEpJ,GAAG,gBACHuJ,OAAQ,SAAAC,KAIRC,IAAK,SAAAA,GAAG,OAAKrB,EAAKsB,OAASD,GAC3BE,UAAW,SAAAH,KAGXI,sBAAsB,cACtBC,kBAAmB,CACjBC,OAAQ,QACRC,MAAO,QAETC,cAAe,WACbnK,QAAQC,IAAI,iBAEdmK,gBAAgB,EAChBC,UAAW,aAGXC,KAAM5D,EACN6D,OAAQ,CACNjE,IAAKkE,WAAW3F,EAAOH,UACvB6B,IAAKiE,WAAW3F,EAAOF,aAGzB+D,EAAAhI,EAAAiI,cAACY,EAAA,YAAD,CACE/E,SAAU,CACR8B,IAAKkE,WAAWhE,EAAcF,KAlUpC,MAmUMC,IAAKiE,WAAWhE,EAAcD,KAnUpC,MAmUmDpE,GAE/CsI,YAAaC,cAAYC,sBAEzBjC,EAAAhI,EAAAiI,cAAA,OACEiC,MAAO,CACLC,WAAU,QACVC,OAAM,iBACNC,QAAS,GACTC,WAAY,GACZC,UAAW,KAGbvC,EAAAhI,EAAAiI,cAACW,EAAA5I,EAAD,CAAYwK,UAAU,KACnB1E,EAAcF,IACXE,EAAcrH,MACd,uBAIVuJ,EAAAhI,EAAAiI,cAACY,EAAA,QAAD,CACEG,OAAQ,SAAAyB,KAGRC,MAAO,CACL,CACE9E,IAAKE,EAAcF,IAAM,IACzBC,IAAKC,EAAcD,IAAM,KAE3B,CACED,IAAKE,EAAcF,IAAM,IACzBC,IAAKC,EAAcD,IAAM,KAE3B,CACED,IAAKE,EAAcF,IAAM,IACzBC,IAAKC,EAAcD,IAAM,KAE3B,CACED,IAAKE,EAAcF,IAAM,IACzBC,IAAKC,EAAcD,IAAM,MAG7B8E,QAASnJ,KAAKa,iBAEhB2F,EAAAhI,EAAAiI,cAACY,EAAA,gBAAD,CACE+B,SAAU,GACVD,QAAS,CACPE,UACE,2FAGH,SAAAC,GAAS,OACR3H,EAAO8F,IAAI,SAAClI,EAAUgK,GAAX,OACT/C,EAAAhI,EAAAiI,cAACY,EAAA,OAAD,CACElG,WAAW,EACXqI,QAAS,SAAA3M,GACPwJ,EAAK5E,SAAS,CACZkB,OAAOnF,OAAAC,EAAA,EAAAD,CAAA,GACFmF,EADC,CAEJH,SAAUb,EAAO4H,GAAGnF,IACpB3B,UAAWd,EAAO4H,GAAGlF,MAEvBC,cAAc9G,OAAAC,EAAA,EAAAD,CAAA,GACTmE,EAAO4H,GADC,CAEXhF,MAAOgF,OAIb/B,OAAQ,SAAArD,KAKRlH,MAAOsC,EAAStC,MAChBkJ,IAAKoD,EACLjH,SAAU,CAAE8B,IAAK7E,EAAS6E,IAAKC,IAAK9E,EAAS8E,KAC7CiF,UAAWA,SAOpBtG,EACCwD,EAAAhI,EAAAiI,cAAA,OACEiC,MAAO,CACLC,WAAU,QACVC,OAAM,iBACNC,QAAS,IAEXnC,UAAU,qBAEVF,EAAAhI,EAAAiI,cAAA,QAAMC,UAAU,kBACdF,EAAAhI,EAAAiI,cAAA,0BACAD,EAAAhI,EAAAiI,cAAA,UACE+C,QAASxJ,KAAK+C,eACd/F,KAAK,SACL0J,UAAU,yBAHZ,MAQFF,EAAAhI,EAAAiI,cAAA,QAAMgD,SAAUzJ,KAAKuD,oBACnBiD,EAAAhI,EAAAiI,cAACiD,EAAAlL,EAAD,CACEP,GAAG,kBACH0L,MAAM,WACNC,WAAY,SAAAlG,GAEV,GADAA,EAAEmG,kBACc,KAAZnG,EAAEoG,MACJ,OAAOzD,EAAK9C,mBAAmBG,IAGnCgD,UAAWJ,EAAQyD,UACnBzG,MAAO3E,EACPqL,WAAW,wBACXC,SAAUjK,KAAKiD,aAAa,YAC5BiH,OAAO,SACPpD,QAAQ,aAEVN,EAAAhI,EAAAiI,cAAA,WACAD,EAAAhI,EAAAiI,cAAC0D,EAAA3L,EAAD,CACEsI,QAAQ,YACRG,MAAM,UACNjK,KAAK,SACL0J,UAAWJ,EAAQ8D,WAJrB,SAYJ5D,EAAAhI,EAAAiI,cAAA,cAIND,EAAAhI,EAAAiI,cAAA,OAAKC,UAAU,wBACbF,EAAAhI,EAAAiI,cAAC4D,EAAA7L,EAAD,CAAOkI,UAAU,mBAAmB4D,UAAW,GAC7C9D,EAAAhI,EAAAiI,cAAC0D,EAAA3L,EAAD,CACEsI,QAAQ,WACR0C,QAASxJ,KAAK+C,eACdkE,MAAM,UACNP,UAAWJ,EAAQiE,QAJrB,aAQA/D,EAAAhI,EAAAiI,cAAC+D,EAAAhM,EAAD,MACAgI,EAAAhI,EAAAiI,cAACW,EAAA5I,EAAD,CAAYsI,QAAQ,KAAKkC,UAAU,MAChC1E,EAAcrH,OAGjBuJ,EAAAhI,EAAAiI,cAAA,YACED,EAAAhI,EAAAiI,cAACiD,EAAAlL,EAAD,CACEP,GAAG,mBACH0L,MAAM,cACNjD,UAAWJ,EAAQyD,UACnBzG,MAAOF,EACP4G,WAAW,0BACXC,SAAUjK,KAAKiD,aAAa,eAC5BiH,OAAO,SACPpD,QAAQ,aAEVN,EAAAhI,EAAAiI,cAAA,WACAD,EAAAhI,EAAAiI,cAAA,OAAKC,UAAU,yBACbF,EAAAhI,EAAAiI,cAAA,2BACAD,EAAAhI,EAAAiI,cAAA,aACGnC,EAAcF,KAAOE,EAAcF,IAAIqG,QAAQ,IAElDjE,EAAAhI,EAAAiI,cAAA,WACAD,EAAAhI,EAAAiI,cAAA,4BACAD,EAAAhI,EAAAiI,cAAA,aACGnC,EAAcD,KAAOC,EAAcD,IAAIoG,QAAQ,GAAI,MAGxDjE,EAAAhI,EAAAiI,cAAA,WACAD,EAAAhI,EAAAiI,cAAA,QAAMC,UAAU,uBACdF,EAAAhI,EAAAiI,cAAC0D,EAAA3L,EAAD,CACEsI,QAAQ,YACRG,MAAM,UACNP,UAAWJ,EAAQiE,OACnBf,QAASxJ,KAAK2E,qBAJhB,QADF,KAUE6B,EAAAhI,EAAAiI,cAAC0D,EAAA3L,EAAD,CACEsI,QAAQ,YACRG,MAAM,UACNP,UAAWJ,EAAQiE,OACnBf,QAASxJ,KAAK0F,uBAJhB,oBArflBrF,EAAA,CAA6BqK,aA2gBdC,uBCljBO,SAAAC,GAAK,MAAK,CAC9BjE,KAAM,CAGJkE,cAAoC,EAArBD,EAAME,QAAQC,KAC7BC,SAAU,GAEZhE,WAAY,CACV8B,YAAa,GACbmC,YAAa,IAEflB,UAAW,CACTjB,WAAY8B,EAAME,QAAQC,KAC1BE,YAAaL,EAAME,QAAQC,MAE7BR,OAAQ,CACNxB,UAAW,GACXmC,aAAc,GACdpC,WAAY,EACZmC,YAAa,GAEfb,UAAW,CACTrB,UAAW,GACXmC,aAAc,GACdpC,WAAY,EACZmC,YAAa,EACbpC,QAAS,KDwhBE8B,CAAmBtK,GEtiBd8K,QACW,cAA7BjL,OAAOX,SAAS6L,UAEe,UAA7BlL,OAAOX,SAAS6L,UAEhBlL,OAAOX,SAAS6L,SAASC,MACvB,2DCZNC,IAASC,OAAO/E,EAAAhI,EAAAiI,cAAC+E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBzJ,WACrBA,UAAU0J,cAAcC,MAAMpP,KAAK,SAAAqP,GACjCA,EAAaC","file":"static/js/main.584451e5.chunk.js","sourcesContent":["export const API_KEY = \"AIzaSyCJ8s34KdxkerYrGB9A5edmHsqCe50ab2s\";\n","import Swal from \"sweetalert2\";\r\n\r\nexport const fetchConfig = function() {\r\n  // Default options are marked with *\r\n  return {\r\n    method: \"GET\", // POST\r\n    mode: \"cors\", // no-cors, cors, *same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"text/json;charset=UTF-8\" // \"application/json\"\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\" // no-referrer, *client\r\n  };\r\n};\r\n\r\nexport const fetchDataFromServer = () => {\r\n  return fetch(\"https://medwing-app.herokuapp.com/api/markers\", fetchConfig)\r\n    .then(response => response.json())\r\n    .then(result => result)\r\n    .catch(_ =>\r\n      Swal.fire({\r\n        type: \"error\",\r\n        title: \"Something went wrong!\",\r\n        text: \"Cannot connect to the server at this point\"\r\n      })\r\n    );\r\n};\r\n\r\nexport const storeLocation = (data = {}) => {\r\n  // save on the server...\r\n  return fetch(\"https://medwing-app.herokuapp.com/api/marker\", {\r\n    ...fetchConfig,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then(response => response.json())\r\n    .then(result => result)\r\n    .catch(error => {\r\n      console.log(error.response);\r\n      return Swal.fire({\r\n        type: \"error\",\r\n        title: \"Something went wrong!\",\r\n        text: \"Cannot connect to the server at this point\"\r\n      });\r\n    });\r\n};\r\n\r\nexport const editLocation = (id, data = {}) => {\r\n  // edit location on the server...\r\n  return fetch(`https://medwing-app.herokuapp.com/api/marker/${id}`, {\r\n    ...fetchConfig,\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then(response => response.json())\r\n    .then(result => result)\r\n    .catch(error => {\r\n      console.log(error.response);\r\n      return Swal.fire({\r\n        type: \"error\",\r\n        title: \"Something went wrong!\",\r\n        text: \"Cannot connect to the server at this point\"\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteLocation = id => {\r\n  // delete location on the server...\r\n  return fetch(`https://medwing-app.herokuapp.com/api/marker/${id}`, {\r\n    ...fetchConfig,\r\n    method: \"DELETE\"\r\n  })\r\n    .then(response => response.json())\r\n    .then(result => result)\r\n    .catch(error => {\r\n      console.log(error.response);\r\n      return Swal.fire({\r\n        type: \"error\",\r\n        title: \"Something went wrong!\",\r\n        text: \"Cannot connect to the server at this point\"\r\n      });\r\n    });\r\n};\r\n\r\nexport default fetchConfig;\r\n","import Swal from \"sweetalert2\";\r\nimport { API_KEY } from \"./config\";\r\n\r\nexport const latLng = [\r\n  { lat: -31.56391, lng: 147.154312, title: \"Some place\" },\r\n  { lat: -33.718234, lng: 150.363181, title: \"Some place\" },\r\n  { lat: -33.727111, lng: 150.371124, title: \"Some place\" },\r\n  { lat: -33.848588, lng: 151.209834, title: \"Some place\" },\r\n  { lat: -33.851702, lng: 151.216968, title: \"Some place\" },\r\n  { lat: -34.671264, lng: 150.863657 },\r\n  { lat: -35.304724, lng: 148.662905 }\r\n];\r\n\r\nexport const searchQuery = async query => {\r\n  if (query.length < 3) {\r\n    return Swal.fire({\r\n      type: \"warning\",\r\n      title: \"Oops!\",\r\n      text: \"Enter a valid location...\"\r\n    });\r\n  }\r\n  const new_query = query.replace(/\\s/g, \"+\");\r\n  try {\r\n    return await fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${new_query}&key=${API_KEY}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        const {\r\n          formatted_address,\r\n          geometry: { location }\r\n        } = responseJson.results[0];\r\n        const markerPoint = { ...location, title: formatted_address };\r\n        return markerPoint;\r\n      })\r\n      // throw new Error(error);\r\n      .catch(error => Promise.reject(error));\r\n  } catch (error) {\r\n    return Swal.fire({\r\n      type: \"warning\",\r\n      title: \"Oops!\",\r\n      text:\r\n        \"Status: The request did not encounter any error but returned no result\"\r\n    });\r\n  }\r\n};\r\n\r\nexport default searchQuery;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuIcon from \"@material-ui/icons/Place\";\nimport {\n  GoogleMap,\n  LoadScript,\n  MarkerClusterer,\n  Marker,\n  OverlayView,\n  Polygon\n} from \"@react-google-maps/api\";\nimport \"./App.css\";\nimport { API_KEY } from \"./utils/config\";\nimport { styles } from \"./plugins/material-ui/styles\";\nimport Swal from \"sweetalert2\";\nimport {\n  fetchDataFromServer,\n  storeLocation,\n  editLocation,\n  deleteLocation\n} from \"./utils/api\";\nimport { searchQuery } from \"./utils/helper\";\n\nconst delta = 0.0522;\nlet viewportheight = 1024;\nif (typeof window.innerWidth !== \"undefined\") {\n  // viewportwidth = window.innerWidth;\n  viewportheight = window.innerHeight;\n}\n\nexport class MapHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapZoom: 8,\n      markerName: \"\",\n      addPlace: false,\n      query: \"\",\n      coords: {},\n      location: {},\n      currentMarker: {\n        lat: null,\n        lng: null,\n        title: \"Marker title\",\n        index: null\n      },\n      places: []\n    };\n  }\n\n  polygonOptions = {\n    fillColor: \"tranparent\",\n    fillOpacity: 0.1,\n    strokeColor: \"red\",\n    strokeOpacity: 1,\n    strokeWeight: 2,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    geodesic: false,\n    zIndex: 1\n  };\n\n  componentDidMount = async () => {\n\n    if (API_KEY.length < 38) {\n      Swal.fire({\n        type: 'info',\n        title: 'Invalid API Key',\n        text: 'Enter your API key in the src/utils/config file'\n      })\n    }\n    fetchDataFromServer().then(result =>\n      this.setState(prevState => ({\n        places: [...prevState.places, ...result.markers]\n      }))\n    );\n    this.initLocation();\n  };\n\n  initLocation = async () => {\n    // use browser navigator object to get user's current location\n    navigator.geolocation.getCurrentPosition(\n      async position => {\n        const { latitude, longitude } = position.coords;\n        if (!latitude && !longitude) {\n          // if browser navigation does not return accurate location info.\n          // use a third party solution to get an approximate location\n          fetch(\"https://ipapi.co/json/\")\n            .then(response => response.json())\n            .then(responseJson =>\n              this.setState({\n                coords: responseJson\n              })\n            )\n            .catch(error => Promise.reject(error));\n        } else {\n          return this.setState({ coords: position.coords });\n        }\n      },\n      () => {\n        // navigator error: not supported or something went wrong\n        fetch(\"https://ipapi.co/json/\")\n          .then(response => response.json())\n          .then(responseJson =>\n            this.setState({\n              coords: responseJson\n            })\n          )\n          .catch(_ =>\n            Swal.fire({\n              type: \"warning\",\n              title: \"GPS service down!\",\n              text: \"Cannot get your location at this time\"\n            })\n          );\n      },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevState.places !== this.state.places) {\n        // this.setState(prevState => ({\n        //   places: [...prevState.places, this.state.location]\n        // }));\n      }\n    }\n  }\n\n  toggleAddPlace = () =>\n    this.setState(prevState => ({ addPlace: !prevState.addPlace }));\n\n  handleChange = item => val => {\n    switch (item) {\n      case \"marker_name\":\n        this.setState({ markerName: val.target.value });\n        break;\n      case \"location\":\n        this.setState({ query: val.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n\n  addPlaceWithMarker = async e => {\n    e.preventDefault();\n    searchQuery(this.state.query).then(async result => {\n      // save on the server\n      await storeLocation(result)\n        .then(response => {\n          const newMarkerPoint = response.success.marker;\n          this.setState(prevState => ({\n            coords: {\n              ...prevState.coords,\n              latitude: newMarkerPoint.lat,\n              longitude: newMarkerPoint.lng\n            },\n            places: [...prevState.places, newMarkerPoint],\n            currentMarker: {\n              ...result,\n              index: prevState.places.length\n            },\n            query: \"\",\n            mapZoom: 12\n          }));\n        })\n        .catch(_ =>\n          Swal.fire({\n            type: \"error\",\n            title: \"Error Saving location\",\n            text: \"Something went wrong. Try adding a new location\"\n          })\n        );\n    });\n  };\n\n  editPlaceWithMarker = async e => {\n    const {\n      markerName,\n      currentMarker: { index, lat, lng }\n    } = this.state;\n    if (!index && !(lat || lng)) {\n      Swal.fire({\n        type: \"warning\",\n        title: \"Oops!\",\n        text: \"Click on a marker before editing...\"\n      });\n      return null;\n    }\n    if (markerName.length < 3) {\n      Swal.fire({\n        type: \"warning\",\n        title: \"Oops!\",\n        text: \"Enter a valid edit title for place...\"\n      });\n      return null;\n    }\n\n    let places = Object.assign([], this.state.places);\n    const editPlace = places.slice(index, index + 1);\n    places.splice(index, 1);\n    await this.setState({ query: markerName, places: places, addPlace: false });\n    searchQuery(this.state.query).then(async result => {\n      // update on the server\n      await editLocation(editPlace[0].id, result)\n        .then(response => {\n          const newMarkerPoint = response.success.marker;\n          this.setState(prevState => ({\n            coords: {\n              ...prevState.coords,\n              latitude: newMarkerPoint.lat,\n              longitude: newMarkerPoint.lng\n            },\n            places: [...prevState.places, newMarkerPoint],\n            currentMarker: { ...result, index: index },\n            query: \"\",\n            markerName: \"\"\n          }));\n        })\n        .catch(_ =>\n          Swal.fire({\n            type: \"error\",\n            title: \"Error updating location\",\n            text: \"Something went wrong.\"\n          })\n        );\n    });\n  };\n\n  deletePlaceWithMarker = async e => {\n    const {\n      currentMarker: { index, lat, lng }\n    } = this.state;\n    if (!index && !(lat || lng)) {\n      Swal.fire({\n        type: \"warning\",\n        title: \"Oops!\",\n        text: \"Add and click on a place before deleting...\"\n      });\n      return;\n    }\n\n    let places = Object.assign([], this.state.places);\n    const deletePlace = places.slice(index, index + 1);\n    if (!deletePlace[0]) {\n      Swal.fire({\n        type: \"warning\",\n        title: \"Oops!\",\n        text: \"Click on a place before deleting...\"\n      });\n      return;\n    }\n    places.splice(index, 1);\n    // delete on the serve\n    await deleteLocation(deletePlace[0].id)\n      .then(response => {\n        this.setState({\n          currentMarker: {\n            ...places[places.length ? places.length - 1 : 0],\n            index: places.length ? places.length - 1 : 0\n          },\n          places: [...response.success.markers]\n        });\n      })\n      .catch(_ =>\n        Swal.fire({\n          type: \"error\",\n          title: \"Error deleting location\",\n          text: \"Something went wrong.\"\n        })\n      );\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      addPlace,\n      query,\n      coords,\n      currentMarker,\n      places,\n      markerName,\n      mapZoom\n    } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <IconButton\n              // onClick={this.toggleDrawer}\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              MedWing App\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <div className=\"map-row\">\n          <div className=\"map-container\">\n            <LoadScript\n              id=\"script-loader\"\n              googleMapsApiKey={API_KEY}\n              onError={error => {\n                console.log(error)\n              }}\n            >\n              <GoogleMap\n                id=\"map-component\"\n                onLoad={map => {\n                  // const bounds = new window.google.maps.LatLngBounds();\n                  // map.fitBounds(bounds);\n                }}\n                ref={ref => (this.mapRef = ref)}\n                onUnmount={map => {\n                  // do your stuff before map is unmounted\n                }}\n                mapContainerClassName=\"map-element\"\n                mapContainerStyle={{\n                  height: \"550px\",\n                  width: \"100%\"\n                }}\n                onZoomChanged={() => {\n                  console.log(\"zoom changed\");\n                }}\n                clickableIcons={true}\n                onDragEnd={() => {\n                  // console.log(\"map dragged\");\n                }}\n                zoom={mapZoom}\n                center={{\n                  lat: parseFloat(coords.latitude),\n                  lng: parseFloat(coords.longitude)\n                }}\n              >\n                <OverlayView\n                  position={{\n                    lat: parseFloat(currentMarker.lat) + delta,\n                    lng: parseFloat(currentMarker.lng) - delta / viewportheight\n                  }}\n                  mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n                >\n                  <div\n                    style={{\n                      background: `white`,\n                      border: `1px solid #ccc`,\n                      padding: 15,\n                      marginLeft: 10,\n                      marginTop: 20\n                    }}\n                  >\n                    <Typography component=\"p\">\n                      {currentMarker.lat\n                        ? currentMarker.title\n                        : \"click on a marker\"}\n                    </Typography>\n                  </div>\n                </OverlayView>\n                <Polygon\n                  onLoad={polygon => {\n                    // console.log(\"polygon: \", polygon);\n                  }}\n                  paths={[\n                    {\n                      lat: currentMarker.lat + 0.05,\n                      lng: currentMarker.lng + 0.05\n                    },\n                    {\n                      lat: currentMarker.lat + 0.05,\n                      lng: currentMarker.lng - 0.05\n                    },\n                    {\n                      lat: currentMarker.lat - 0.05,\n                      lng: currentMarker.lng - 0.05\n                    },\n                    {\n                      lat: currentMarker.lat - 0.05,\n                      lng: currentMarker.lng + 0.05\n                    }\n                  ]}\n                  options={this.polygonOptions}\n                />\n                <MarkerClusterer\n                  gridSize={10}\n                  options={{\n                    imagePath:\n                      \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\"\n                  }}\n                >\n                  {clusterer =>\n                    places.map((location, i) => (\n                      <Marker\n                        clickable={true}\n                        onClick={_ => {\n                          this.setState({\n                            coords: {\n                              ...coords,\n                              latitude: places[i].lat,\n                              longitude: places[i].lng\n                            },\n                            currentMarker: {\n                              ...places[i],\n                              index: i\n                            }\n                          });\n                        }}\n                        onLoad={marker => {\n                          // console.log(marker)\n                        }}\n                        // onMouseOver={e => {\n                        // }}\n                        title={location.title}\n                        key={i}\n                        position={{ lat: location.lat, lng: location.lng }}\n                        clusterer={clusterer}\n                      />\n                    ))\n                  }\n                </MarkerClusterer>\n              </GoogleMap>\n\n              {addPlace ? (\n                <div\n                  style={{\n                    background: `white`,\n                    border: `1px solid #ccc`,\n                    padding: 15\n                  }}\n                  className=\"overlay-component\"\n                >\n                  <span className=\"overlay-header\">\n                    <h3>Add location</h3>\n                    <button\n                      onClick={this.toggleAddPlace}\n                      type=\"button\"\n                      className=\"overlay-header-button\"\n                    >\n                      X\n                    </button>\n                  </span>\n                  <form onSubmit={this.addPlaceWithMarker}>\n                    <TextField\n                      id=\"search-location\"\n                      label=\"Location\"\n                      onKeyPress={e => {\n                        e.stopPropagation();\n                        if (e.which === 13) {\n                          return this.addPlaceWithMarker(e);\n                        }\n                      }}\n                      className={classes.textField}\n                      value={query}\n                      helperText=\"enter a valid address\"\n                      onChange={this.handleChange(\"location\")}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      className={classes.addButton}\n                      // onClick={addPlaceWithMarker}\n                    >\n                      Add\n                    </Button>\n                  </form>\n                </div>\n              ) : (\n                <div />\n              )}\n            </LoadScript>\n          </div>\n          <div className=\"map-editor-container\">\n            <Paper className=\"editor-container\" elevation={1}>\n              <Button\n                variant=\"outlined\"\n                onClick={this.toggleAddPlace}\n                color=\"primary\"\n                className={classes.button}\n              >\n                Add place\n              </Button>\n              <Divider />\n              <Typography variant=\"h6\" component=\"h4\">\n                {currentMarker.title}\n              </Typography>\n\n              <form>\n                <TextField\n                  id=\"edit-marker-name\"\n                  label=\"Marker name\"\n                  className={classes.textField}\n                  value={markerName}\n                  helperText=\"change the marker title\"\n                  onChange={this.handleChange(\"marker_name\")}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br />\n                <div className=\"marker-label-section \">\n                  <label>Latitude: </label>\n                  <label>\n                    {currentMarker.lat && currentMarker.lat.toFixed(6)}\n                  </label>\n                  <br />\n                  <label>Longitude: </label>\n                  <label>\n                    {currentMarker.lng && currentMarker.lng.toFixed(6)}{\" \"}\n                  </label>\n                </div>\n                <br />\n                <span className=\"edit-marker-section\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={this.editPlaceWithMarker}\n                  >\n                    Edit\n                  </Button>\n                  Or\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={this.deletePlaceWithMarker}\n                  >\n                    Delete\n                  </Button>\n                </span>\n              </form>\n            </Paper>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMapHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(MapHome);\n","export const styles = theme => ({\r\n  root: {\r\n    // ...theme.mixins.gutters(),\r\n    // paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -18,\r\n    marginRight: 10\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    marginLeft: 5,\r\n    marginRight: 5\r\n  },\r\n  addButton: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    marginLeft: 9,\r\n    marginRight: 5,\r\n    padding: 5\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}